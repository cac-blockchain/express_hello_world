apiVersion: storage.k8s.io/v1
kind: StorageClass
metadata:
  name: storage-class-01
provisioner: kubernetes.io/no-privisioner
---
apiVersion: v1
kind: PersistentVolume
metadata:
  name: pv0001
spec:
  capacity:
    storage: 1Gi
  volumeMode: Filesystem
  accessModes:
    - ReadWriteMany
  persistentVolumeReclaimPolicy: Retain
  storageClassName: storage-class-01
  hostPath:
    path: /data/pv0001
    type: DirectoryOrCreate
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: pv-claim-001
spec:
  accessModes:
  - ReadWriteMany
  volumeMode: Filesystem
  resources:
    requests:
      storage: 500Mi
  storageClassName: storage-class-01
  volumeName: pv0001
---
apiVersion: v1
kind: Pod
metadata:
  name: lifecycle-demo
  labels:
    app: lifecycle-demo
spec:
  terminationGracePeriodSeconds: 10
  containers:
  - name: lifecycle-demo
    image: busybox:1.28
    imagePullPolicy: IfNotPresent
    command: ['sh', '-c', 'while true; do echo - $name $(date) >> /var/www/html/share.txt && sleep 1; done;']
    lifecycle:
      postStart:
        exec:
          command: ["/bin/sh", "-c", "echo postStart $name $(date) >> /var/www/html/share.txt && sleep 3"]
      preStop:
        exec:
          command: ["/bin/sh", "-c", "echo preStop $name $(date) >> /var/www/html/share.txt && sleep 3"]
    ports:
      - containerPort: 80
    volumeMounts: 
        - name: example-volume 
          mountPath: /var/www/html # 任意のパス 
  volumes: 
      - name: example-volume 
        persistentVolumeClaim: 
          claimName: pv-claim-001
